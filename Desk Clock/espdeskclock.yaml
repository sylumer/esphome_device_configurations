# Substitutions for use elsewhere in content
substitutions:
  device_name: espdeskclock
  friendly_name: ESPDESKCLOCK

# ESPHome
esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}
  # On boot set the backlight to 60%
  on_boot:
    then:
      - light.turn_on:
          id: backlight
          brightness: 60%

# ESP32 Board
esp32:
  board: esp32-s3-devkitc-1
  variant: esp32s3
  framework:
    type: arduino

# Enable logging
logger: 
  level: DEBUG
  # Quieten the warnings about delays
  logs:
    tdisplays3.display: ERROR
    component: ERROR

# Load in component to allow use of the LCD screen
external_components:
  - source: github://landonr/lilygo-tdisplays3-esphome
    components: [tdisplays3]

# Over the air
ota:
  password: !secret ota_password

# Details of default Wifi and fallback hotspot
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: ${device_name} Fallback Hotspot
    password: !secret ap_password

# No captive portal defined
captive_portal:

# Enable Home Assistant API
api:
  encryption:
    key: !secret api_encryption_key

# Get the time from home assistant
time:
  - platform: homeassistant
    id: ha_time

# Set pin for backlight
output:
  - platform: ledc
    pin: GPIO38
    id: ledc_pmw
    
# Set backlight controller
light:
  - platform: monochromatic
    output: ledc_pmw
    name: "Backlight"
    id: backlight
    restore_mode: ALWAYS_OFF

# IP address (text)
text_sensor:
  - platform: wifi_info
    ip_address:
      name: ${device_name} IP Address
      id: host_ip
      entity_category: diagnostic
      icon: mdi:router-wireless

# Temperature sensors (numeric)
sensor:
  - platform: homeassistant
    id: office_temp
    entity_id: sensor.zthermo01_temperature
  - platform: homeassistant
    id: outside_temp
    entity_id: sensor.iyork164_temperature

# Set fonts
font:
  - file: "gfonts://Roboto"
    id: ipfont
    size: 15
  - file: "gfonts://Roboto"
    id: datefont
    size: 25
  - file: "gfonts://Roboto"
    id: clockfont
    size: 60

# Background image
image:
  - file: "sky.jpg"
    id: background_image
    type: RGB24


# 320 x 170 pixel display
display:
  - platform: tdisplays3
    id: lcd
    update_interval: 0.25s
    rotation: 90
    pages:
      - id: page1
        lambda: |-
          //Base colours
          auto White = Color(255, 255, 255);
          // Write background image
          it.image(0, 0, id(background_image));
          // Write clock
          it.printf(160, 60, id(clockfont), White, TextAlign::CENTER, id(ha_time).now().strftime("%H:%M:%S").c_str());
          //Write Date
          it.printf(160, 110, id(datefont), White, TextAlign::TOP_CENTER, id(ha_time).now().strftime("%a %d %b %Y").c_str());
          //Write Outside Temp
          //if (id(outside_temp).has_state())
          //{
          it.printf(2,2, id(ipfont), White, TextAlign::TOP_LEFT, "OUTSIDE: %.1f°", id(outside_temp).state);
          //}
          //Write Office Temp
          //if (id(office_temp).has_state())
          //{
          it.printf(2,170, id(ipfont), White, TextAlign::BOTTOM_LEFT, "OFFICE: %.1f°", id(office_temp).state);
          //}
          //Write IP Address
          it.printf(320,170, id(ipfont), White, TextAlign::BOTTOM_RIGHT, "%15s", id(host_ip).state.c_str());

# Push Buttons
# 90 degree screen rotation, so boot (GPIO0) is at the bottom.
binary_sensor:
  - platform: gpio
    pin:
      number: 14
      inverted: true
    name: ${friendly_name} Top Button
  - platform: gpio
    pin:
      number: 0
      inverted: true
    name: ${friendly_name} Bottom Button